<link rel="stylesheet" href="{{ 'component-card.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-product-grid.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'section-product-recommendations.css' | asset_url }}" media="print" onload="this.media='all'">

<noscript>{{ 'component-card.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-price.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-product-grid.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'section-product-recommendations.css' | asset_url | stylesheet_tag }}</noscript>
{%- if section.settings.show_product_recommendations == 'dynamic' -%}
<product-recommendations class="product-recommendations page-width" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=40">
    {% if recommendations.performed and recommendations.products_count > 0 %}
        <h2 class="product-recommendations__heading">{{ section.settings.heading | escape }}</h2>
        <ul class="grid grid--2-col product-grid{% if recommendations.products_count > 3 %} grid--4-col-desktop grid--quarter-max{% else %} grid--{{ recommendations.products_count }}-col-tablet{% endif %}" role="list">
            {% for recommendation in recommendations.products %}
                <li class="grid__item">
                    {% render 'product-card',
            product_card_product: recommendation,
            media_size: section.settings.image_ratio,
            show_secondary_image: section.settings.show_secondary_image,
            add_image_padding: section.settings.add_image_padding,
            show_vendor: section.settings.show_vendor,
            show_image_outline: section.settings.show_image_outline
          %}
                </li>
            {% endfor %}
        </ul>
    {% endif %}
</product-recommendations>
{%- elsif section.settings.show_product_recommendations == 'selected' -%}

<product-recommendations class="product-recommendations page-width" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4">
    {% if recommendations.performed and recommendations.products_count > 0 %}
        <h2 class="product-recommendations__heading">{{ section.settings.heading | escape }}</h2>
        <ul class="grid grid--2-col product-grid{% if recommendations.products_count > 3 %} grid--4-col-desktop grid--quarter-max{% else %} grid--{{ recommendations.products_count }}-col-tablet{% endif %}" role="list">
                {%- for block in section.blocks -%}

                {% assign ctm_product = all_products[block.settings.c_product] %}
                {% assign price_show = section.settings.price-enbale %}
                <li class="grid__item">
                    {% render 'product-card',
            product_card_product: ctm_product,
            media_size: section.settings.image_ratio,
            show_secondary_image: section.settings.show_secondary_image,
            add_image_padding: section.settings.add_image_padding,
            show_vendor: section.settings.show_vendor,
            show_image_outline: section.settings.show_image_outline
          %}
                </li>
            {% endfor %}
        </ul>
    {% endif %}
</product-recommendations>
{%- endif -%}

{% javascript %}

class ProductRecommendations extends HTMLElement {
    constructor() {
        super();

        const handleIntersection = (entries, observer) => {
            if (!entries[0].isIntersecting) 
                return;
            

            observer.unobserve(this);

            fetch(this.dataset.url).then(response => response.text()).then(text => {
                const html = document.createElement('div');
                html.innerHTML = text;
                const recommendations = html.querySelector('product-recommendations');
                if (recommendations && recommendations.innerHTML.trim().length) {
                    this.innerHTML = recommendations.innerHTML;
                }
            }).catch(e => {
                console.error(e);
            });
        }

        new IntersectionObserver(handleIntersection.bind(this), {
            rootMargin: '0px 0px 200px 0px'
        }).observe(this);
    }
}

customElements.define('product-recommendations', ProductRecommendations);

{% endjavascript %}

{% schema %}

{
    "name": "t:sections.product-recommendations.name",
    "tag": "section",
    "class": "spaced-section",
    "settings": [
        {
            "type": "paragraph",
            "content": "t:sections.product-recommendations.settings.paragraph__1.content"
        }, {
            "type": "select",
            "id": "show_product_recommendations",
            "label": {
              "cs": "Zobrazit dynamická doporučení",
              "da": "Vis dynamiske anbefalinger",
              "de": "Dynamische Empfehlungen anzeigen",
              "en": "Show recommendations",
              "es": "Mostrar recomendaciones dinámicas",
              "fi": "Näytä dynaamiset suositukset",
              "fr": "Afficher les recommandations dynamiques",
              "it": "Mostra raccomandazioni dinamiche",
              "ja": "動的推奨を表示する",
              "ko": "동적 권장 사항 표시",
              "nb": "Vis dynamiske anbefalinger",
              "nl": "Dynamische aanbevelingen weergeven",
              "pl": "Pokaż dynamiczne rekomendacje",
              "pt-BR": "Exibir recomendações dinâmicas",
              "pt-PT": "Mostrar recomendações dinâmicas",
              "sv": "Visa dynamiska rekommendationer",
              "th": "แสดงคำแนะนำแบบไดนามิก",
              "tr": "Dinamik önerileri göster",
              "vi": "Hiển thị đề xuất động",
              "zh-CN": "显示动态推荐",
              "zh-TW": "顯示動態推薦"
            },
            "info": "Dynamic recommendations change and improve with time. [Learn more](https://help.shopify.com/en/themes/development/recommended-products)",
            "options": [
              {
                "value": "disable",
                "label": "Disable"
              },
              {
                "value": "dynamic",
                "label": "Automatically Generated"
              },
              {
                "value": "selected",
                "label":"Manually Selected"
              }
            ] 
            
          },{
            "type": "text",
            "id": "heading",
            "default": "You may also like",
            "label": "t:sections.product-recommendations.settings.heading.label"
        }, {
            "type": "header",
            "content": "t:sections.product-recommendations.settings.header__2.content"
        }, {
            "type": "select",
            "id": "image_ratio",
            "options": [
                {
                    "value": "adapt",
                    "label": "t:sections.product-recommendations.settings.image_ratio.options__1.label"
                }, {
                    "value": "portrait",
                    "label": "t:sections.product-recommendations.settings.image_ratio.options__2.label"
                }, {
                    "value": "square",
                    "label": "t:sections.product-recommendations.settings.image_ratio.options__3.label"
                }
            ],
            "default": "adapt",
            "label": "t:sections.product-recommendations.settings.image_ratio.label"
        }, {
            "type": "checkbox",
            "id": "show_secondary_image",
            "default": false,
            "label": "t:sections.product-recommendations.settings.show_secondary_image.label"
        }, {
            "type": "checkbox",
            "id": "add_image_padding",
            "default": false,
            "label": "t:sections.product-recommendations.settings.add_image_padding.label"
        },
        {
          "type": "checkbox",
          "id": "show_image_outline",
          "default": true,
          "label": "t:sections.product-recommendations.settings.show_image_outline.label"
        },
        {
            "type": "checkbox",
            "id": "show_vendor",
            "default": false,
            "label": "t:sections.product-recommendations.settings.show_vendor.label"
        }
    ],
    "blocks": [
    {
      "type": "Product",
      "name": "Product",
      "settings": [
        {
        "type": "product",
        "id": "c_product",
        "label": "Product"
        }
  ]
    
  }
  ]
}

{% endschema %}
